rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /{path=**}/deposits/{deposit} {
      allow read: if isSignedIn()
    }

    match /craftsmanOrder/{id} {
      allow read: if isSignedIn();
      allow create: if isSignedIn(); // TODO add controls
      allow update: if isSignedIn() && affectedKeys().hasOnly(['material']) && incomingData().material.rate == currentData().material.rate;

      match /models/{id} {
        allow read: if isSignedIn();
        allow write: if isSignedIn(); // TODO add controls
      }

      match /cashAdvances/{id} {
        allow read: if isSignedIn();
        allow create: if isSignedIn(); // TODO add controls
      }

      match /deposits/{id} {
        allow read: if isSignedIn();
        allow create: if isSignedIn();
      }
    }

    match /goods/{id} {
      allow read: if isSignedIn();
      allow create, delete: if isSignedIn();
      allow update: if isSignedIn() && !affectedKeys().hasAny(['created']);
    }

    match /goodsHistory/{id} {
      allow read: if isSignedIn();
    }

    match /users/{id} {
      allow read: if isSignedIn();
    }
  }

  function isSignedIn() {
      return request.auth != null;
  }

  function isSignedInWithUid(uid) {
      return isSignedIn() && request.auth.uid == uid;
  }

  function isAdmin() {
      return isSignedIn() && request.auth.token.role == "ADMIN";
  }

  function affectedKeys() {
      return incomingData().diff(currentData()).affectedKeys();
  }

  function incomingData() {
      return request.resource.data;
  }

  function currentData() {
      return resource.data;
  }
}
